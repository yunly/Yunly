using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Http;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.AspNetCore.Routing;

using UrlsAndRoutes.Infrastructure;

namespace UrlsAndRoutes
{
    public class Startup
    {
        // This method gets called by the runtime. Use this method to add services to the container.
        // For more information on how to configure your application, visit https://go.microsoft.com/fwlink/?LinkID=398940
        public void ConfigureServices(IServiceCollection services)
        {
            services.Configure<RouteOptions>(options => {
                options.ConstraintMap.Add("weekday", typeof(WeekDayConstraint));
                
                ///When true, this bool property converts URLs to lowercase when the controller, action, or segment values contain uppercase characters. 
                ///The default value is false.                
                options.LowercaseUrls = true;

                ///When true, this bool property appends a trailing slash to the URLs generated by the routing system.
                ///The default value is false.
                options.AppendTrailingSlash = true;



            });

            services.AddMvc();


        }

        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
        public void Configure(IApplicationBuilder app, IHostingEnvironment env)
        {
            app.UseDeveloperExceptionPage();
            app.UseStatusCodePages();
            app.UseStaticFiles();

            ///{controller}/{action}/{id?}
            //app.UseMvcWithDefaultRoute();
            /*
            app.UseMvc(routes =>
            {

                routes.MapRoute(
                  name: "shop",
                  template: "shop/{action=Index}",
                  defaults: new { controller = "Home" }
                  );

                //routes.MapRoute(name: "MyRoute",
                //    template: "{controller}/{action}/{id?}",
                //    defaults: new { controller = "Home", action = "Index" },
                //    constraints: new { id = new WeekDayConstraint() });

                routes.MapRoute(
                    name: "regex",
                    template: "{controller:regex(^A.*)=Home}/{action=Index}/{id?}"
                    );


                routes.MapRoute(
                    name: "inline",
                    template:"{controller=Home}/{action=Index}/{id:weekday}"
                    );

                routes.MapRoute(
                   name: "default",
                   template: "{controller=Home}/{action=Index}"
                   );
            });
            */




            app.UseMvc(routes =>
            {
                routes.MapRoute(
                    name: "areas",
                    template: "{area:exists}/{controller=Home}/{action=Index}");


                routes.Routes.Add(new LegacyRoute(
                    app.ApplicationServices,
                    "/articles/Windows_3.1_Overview.html",
                    "/old/.NET_1.0_Class_Library"));

                //routes.MapRoute(
                //   name: "NewRoute",
                //   template: "App/Do{action}",
                //   defaults: new { controller = "Home" }
                //   );

                routes.MapRoute(
                    name: "default",
                    template: "{controller=Home}/{action=Index}/{id?}"
                );

                routes.MapRoute(
                    name: "out",
                    template: "outbound/{controller=Home}/{action=Index}"
                );

            });
        }
    }
}
